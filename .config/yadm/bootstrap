#!/usr/bin/env python3

import os
import stat
from pathlib import Path
from subprocess import run, PIPE

import requests

HOME = Path.home()
NVIM_URL = "https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage"
NVIM_INSTALL = f"{HOME}/.local/bin/nvim"
DEV_REQUIREMENTS = f"{HOME}/.scripts/dev_requirements.txt"
REQUIREMENTS = f"{HOME}/.scripts/requirements.txt"
PACKAGES = f"{HOME}/.scripts/packages.txt"
NPM_PACKAGES = f"{HOME}/.scripts/npm_packages.txt"
SYMLINKS = {f"{HOME}/.git": f"{HOME}/.config/yadm/repo.git/", f"{HOME}/.tmate.conf": f"{HOME}/.tmux.conf"}


def download_file(url, destination):
    print(f"Downloading {url} to {destination}")
    request = requests.get(url)
    with open(destination, "wb") as f:
        f.write(request.content)


def make_executable(file_name):
    os.chmod(file_name, os.stat(file_name).st_mode | stat.S_IEXEC)


def install_nvim_if_not_installed():
    if Path(NVIM_INSTALL).is_file():
        return
    print("Installing nvim")
    download_file(NVIM_URL, NVIM_INSTALL)
    make_executable(NVIM_INSTALL)
    run(["git", "config", "--global", "core.editor", "nvim"], check=True)


def install_packages():
    run(["xargs", "-a", PACKAGES, "sudo", "apt-get", "install"], check=True)


def install_requirements():
    run(["pip3", "install", "-r", DEV_REQUIREMENTS], check=True)
    run(["pip3", "install", "-r", REQUIREMENTS], check=True)


def install_npm_packages():
    run(["xargs", "-a", NPM_PACKAGES, "sudo", "npm", "install", "-g"], check=True)


def install_symlinks():
    for source, target in SYMLINKS.items():
        try:
            Path(source).symlink_to(target)
            print(f"Installed symlink from {target} to {source}")
        except FileExistsError:
            pass

def install_newer_node_version():
    run("curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -", shell=True, check=True)
    run(["sudo", "apt-get", "install", "-y", "nodejs"], check=True)


def install_crontab():
    run(["crontab", f"{HOME}/.scripts/crontab"], check=True)


def main():
    install_packages()
    install_nvim_if_not_installed()
    install_newer_node_version()
    install_requirements()
    install_npm_packages()
    install_symlinks()
    install_crontab()
    run(["systemctl", "--user", "enable", "syncthing.service"], check=True)
    run(["sudo", "sh", f"{HOME}/.scripts/install_pam_autologin.sh"], check=True)


if __name__ == "__main__":
    main()
