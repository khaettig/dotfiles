#!/usr/bin/env python3

import os
import stat
from pathlib import Path
from subprocess import run

import requests

HOME = Path.home()
NVIM_URL = "https://github.com/neovim/neovim/releases/download/nightly/nvim.appimage"
NVIM_INSTALL = f"{HOME}/.local/bin/nvim"
REQUIREMENTS = f"{HOME}/.scripts/requirements.txt"
PACKAGES = f"{HOME}/.scripts/packages.txt"


def download_file(url, destination):
    print(f"Downloading {url} to {destination}")
    request = requests.get(url)
    with open(destination, "wb") as f:
        f.write(request.content)


def make_executable(file_name):
    os.chmod(file_name, os.stat(file_name).st_mode | stat.S_IEXEC)


def install_config_file(source, link):
    if link.exists():
        backup = link.with_suffix(".old")
        print(f"Moving existing file to {backup}")
        link.rename(backup)

    print(f"Creating soft link for {source}")
    link.symlink_to(source)


def install_nvim_if_not_installed():
    if Path(NVIM_INSTALL).is_file():
        return
    print("Installing nvim")
    download_file(NVIM_URL, NVIM_INSTALL)
    make_executable(NVIM_INSTALL)


def install_packages():
    run(["xargs", "-a", PACKAGES, "sudo", "apt-get", "install"], check=True)


def install_requirements():
    run(["pip3", "install", "-r", REQUIREMENTS], check=True)


def main():
    install_packages()
    install_nvim_if_not_installed()
    install_requirements()
    run(["systemctl", "--user", "enable", "syncthing.service"], check=True)
    run(["sudo", "sh", "/home/kevin/.scripts/install_pam_autologin.sh"], check=True)


if __name__ == "__main__":
    main()
